# Values: https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack
---
{{- $certManagerEnabled := .Values | get "global-config.cert-manager.enabled" false }}

prometheusOperator:
  enabled: true

prometheus:
  enabled: true

  {{ $prometheusConfig := .Values | get "prometheus.config" dict }}
  prometheusSpec:
    
    podMonitorSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false

    retention: {{ $prometheusConfig | get "retention" "35d" }}
    {{ $prometheusStorage := $prometheusConfig | get "storage" false }}
    {{ if $prometheusStorage }}
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: {{ $prometheusStorage.size }}
    {{ end }}

  {{ $prometheusIngress := .Values | get "prometheus.ingress" dict }}
  ingress:
    enabled: {{ $prometheusIngress | get "enabled" false }}
    annotations:
      {{- if and ($prometheusIngress | get "auth.username" false) ($prometheusIngress | get "auth.password" false) }}
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: prometheus-ingress-auth
      {{- end }}
    path:
      - /
    pathType: ImplementationSpecific
    hosts:
      - {{ $prometheusIngress.hostname }}
    {{ if $certManagerEnabled }}
    tls:
      - secretName: {{ .Release.Name }}-prometheus-tls
        hosts:
          - {{ $prometheusIngress.hostname }}
    {{- end }}

{{ $prometheusGrafana := .Values | get "prometheus.grafana" dict }}
grafana:
  enabled: {{ $prometheusGrafana | get "enabled" "false" }}
  {{- if and ($prometheusGrafana | get "ingress.enabled" false) ($prometheusGrafana | get "enabled" false) }}
  ingress:
    enabled: true
    hosts:
      - {{ $prometheusGrafana.ingress.hostname }}
    tls:
      - secretName: {{ .Release.Name }}-grafana-tls
        hosts:
          - {{ $prometheusGrafana.ingress.hostname }}
  {{- end }}
  sidecar:
    dashboards:
      searchNamespace: ALL
    datasources:
      searchNamespace: ALL
    notifiers:
      searchNamespace: ALL
  admin:
    existingSecret: grafana-auth
    userKey: admin-user
    passwordKey: admin-password
